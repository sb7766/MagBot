// <auto-generated />
using System;
using MagBot.DatabaseContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MagBot.Migrations
{
    [DbContext(typeof(GuildDataContext))]
    [Migration("20191119053001_Migration4")]
    partial class Migration4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "3.1.0-preview3.19554.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MagBot.DatabaseContexts.BlacklistedRaffleUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("RaffleConfigId")
                        .HasColumnType("integer");

                    b.Property<long>("UserIdLong")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RaffleConfigId");

                    b.ToTable("BlacklistedRaffleUsers");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.Guild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<long>("DiscordIdLong")
                        .HasColumnType("bigint");

                    b.Property<long>("ReportingChannelIdLong")
                        .HasColumnType("bigint");

                    b.Property<bool>("ReportingEnabled")
                        .HasColumnType("boolean");

                    b.Property<long>("ReportingRoleIdLong")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.Raffle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<long>("ChannelLong")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GuildId")
                        .HasColumnType("integer");

                    b.Property<long>("OwnerLong")
                        .HasColumnType("bigint");

                    b.Property<bool>("Started")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("StartedAt")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("Raffles");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.RaffleConfig", b =>
                {
                    b.Property<int>("RaffleConfigId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<TimeSpan>("Length")
                        .HasColumnType("interval");

                    b.Property<string>("Prize")
                        .HasColumnType("text");

                    b.Property<int>("RaffleId")
                        .HasColumnType("integer");

                    b.Property<int>("WinnerCount")
                        .HasColumnType("integer");

                    b.HasKey("RaffleConfigId");

                    b.HasIndex("RaffleId")
                        .IsUnique();

                    b.ToTable("RaffleConfigs");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.RaffleEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("RaffleId")
                        .HasColumnType("integer");

                    b.Property<long>("UserIdLong")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RaffleId");

                    b.ToTable("RaffleEntries");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.SelfAssignedRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("GuildId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<long>("RoleIdLong")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("SelfAssignedRoles");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<string>("TagListId")
                        .HasColumnType("text");

                    b.Property<int?>("TagListId1")
                        .HasColumnType("integer");

                    b.Property<string>("TagString")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("TagListId1");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.TagList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn);

                    b.Property<int>("GuildId")
                        .HasColumnType("integer");

                    b.Property<string>("Keyword")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.ToTable("TagLists");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.BlacklistedRaffleUser", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.RaffleConfig", "RaffleConfig")
                        .WithMany("BlacklistedUsers")
                        .HasForeignKey("RaffleConfigId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.Raffle", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.Guild", "Guild")
                        .WithMany("Raffles")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.RaffleConfig", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.Raffle", "Raffle")
                        .WithOne("Config")
                        .HasForeignKey("MagBot.DatabaseContexts.RaffleConfig", "RaffleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.RaffleEntry", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.Raffle", "Raffle")
                        .WithMany("RaffleEntries")
                        .HasForeignKey("RaffleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.SelfAssignedRole", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.Guild", "Guild")
                        .WithMany("SelfAssignedRoles")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.Tag", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.TagList", "TagList")
                        .WithMany("Tags")
                        .HasForeignKey("TagListId1");
                });

            modelBuilder.Entity("MagBot.DatabaseContexts.TagList", b =>
                {
                    b.HasOne("MagBot.DatabaseContexts.Guild", "Guild")
                        .WithMany("TagLists")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
